data_cold <- tibble(State = c("Maine", "Alaska"),
April_vacc_rate = c("32.4%", "41.7%"))
data_As
data_cold
knitr::include_graphics("images/inner_join.gif")
ij = inner_join(data_As, data_cold)
ij
knitr::include_graphics("images/left_join.gif")
lj = left_join(data_As, data_cold)
lj
# install.packages("tidylog")
library(tidylog)
# install.packages("tidylog")
library(tidylog)
left_join(data_As, data_cold)
knitr::include_graphics("images/right_join.gif")
rj <- right_join(data_As, data_cold)
rj
lj2 <- left_join(data_cold, data_As)
lj2
knitr::include_graphics("images/full_join.gif")
fj <- full_join(data_As, data_cold)
fj
data_As <- tibble(State = c("Alabama", "Alaska"),
state_bird = c("wild turkey", "willow ptarmigan"))
data_cold <- tibble(State = c("Maine", "Alaska", "Alaska"),
vacc_rate = c("32.4%", "41.7%", "46.2%"),
month = c("April", "April", "May"))
data_As
data_cold
lj <- left_join(data_As, data_cold)
lj
knitr::include_graphics("images/left_join_extra.gif")
unloadNamespace("tidylog")
install.packages("starwars")
install.packages("starwarsdb")
starwarsdb?
x
?starwarsdb
ex_wide <- tibble(State = "Alabama",
June_vacc_rate = "37.2%",
May_vacc_rate = "36.0%",
April_vacc_rate = "32.4%"
)
ex_long <- pivot_longer(ex_wide, cols = !State)
ex_wide
ex_long
data.wide <- readxl::read_excel("data/GDP_by_Country.xlsx")
head(data.wide)
head(data.wide)
ex_long <- pivot_longer(cols=c(2021, 2020, 2019, 2018, 2017), names_to = "year", values_to = "GDP")
# Use pivot_longer() in R
ex_long <- pivot_longer(cols=c(2021, 2020, 2019, 2018, 2017), names_to = "year", values_to = "GDP")
# Use pivot_longer() in R
ex_long <- pivot_longer(cols=2:5, names_to = "year", values_to = "GDP")
# Use pivot_longer() in R
ex_long <- pivot_longer(cols="2021": "2017", names_to = "year", values_to = "GDP")
data.wide <- read.csv("data/GDP_by_Country.csv")
head(data.wide)
data.wide <- read.csv("data/GDP_by_Country.csv", row.names = FALSE)
data.wide <- read.table("data/GDP_by_Country.csv")
data.wide <- readr::read_csv("data/GDP_by_Country.csv")
data.wide <- readr::read_csv("data/GDP_by_Country.csv", show_col_types = FALSE)
head(data.wide)
# Use pivot_longer() in R
ex_long <- pivot_longer(cols="2021": "2017", names_to = "year", values_to = "GDP")
# Use pivot_longer() in R
ex_long <- pivot_longer(cols="2021": "2017", names_to = "year", values_to = "GDP")
# Use pivot_longer() in R
ex_long <- pivot_longer(cols=2:5, names_to = "year", values_to = "GDP")
#install.packages("naniar")
library(naniar)
x = c(0, NA, 2, 3, 4, -0.5, 0.2)
naniar::pct_complete(x)
test
library(knitr)
opts_chunk$set(comment = "")
library(readr)
suppressPackageStartupMessages(library(dplyr))
library(tidyverse)
#install.packages("naniar")
library(naniar)
x = c(0, NA, 2, 3, 4, -0.5, 0.2)
naniar::pct_complete(x)
test
test<-c(0,NA, -1)
test/0
test <-test/0
is.na(test)
is.nan(test)
is.infinite(test)
#install.packages("naniar")
library(naniar)
x = c(0, NA, 2, 3, 4, -0.5, 0.2)
naniar::pct_complete(x)
test
naniar::pct_complete(test) # doesn't count infinite values as missing
?airquality # use this to find out more about the data
airqual <-tibble(airquality)
airqual
pct_complete(airquality)
naniar::gg_miss_var(airqual)
sum(c(1,2,3,NA))
mean(c(2,4,NA))
median(c(1,2,3,NA))
red_blue <- tibble(color = rep(c("red", "blue", NA), 3))
red_blue <- red_blue %>% count(color)
red_blue <- rename(red_blue, col_count = n)
x = c(TRUE, TRUE, TRUE, TRUE, FALSE, NA)
sum(x)
sum(x, na.rm = TRUE)
df <-tibble(Dog = c(0, NA, 2, 3, 1, 1),
Cat= c(NA, 8, 6, NA, 2, NA))
df
df %>% filter(Dog < 3)
df %>% filter(Dog < 3 | is.na(Dog))
df %>% drop_na(Dog)
df %>% drop_na()
df<-df %>% mutate(test =c(1,2,3,4,5,6))
df
miss_var_which(df) # which columns have missing values
df %>% select(!miss_var_which(df))
is.na(df) %>% head(n = 3)
colMeans(is.na(df))#TRUE and FALSE treated like 0 and 1
df %>% select(which(colMeans(is.na(df)) < 0.2))# remove if over 20% missing
df %>% head(n = 3)
df %>% mutate(Dog = na_if(Dog, 0))
red_blue
red_blue %>% mutate(percent =
col_count/sum(pull(red_blue, col_count)))
red_blue %>% mutate(percent =
col_count/sum(pull(drop_na(red_blue), col_count)))
data_diet <- tibble(Diet = rep(c("A", "B", "B"),
times = 4),
Gender = c("Male",
"m",
"Other",
"F",
"Female",
"M",
"f",
"O",
"Man",
"f",
"F",
"O"),
Weight_start = sample(100:250, size = 12),
Weight_change = sample(-10:20, size = 12))
data_diet
data_diet %>%
count(Gender)
# General Format - this is not code!
{data_input} %>%
mutate({variable_to_fix} = {Variable_fixing}, {old_value} = {new_value},
data_diet %>%
mutate(Gender = recode(Gender, M = "Male",
m = "Male",
Man = "Male",
O = "Other",
f = "Female",
F = "Female")) %>%
count(Gender, Diet)
# General Format - this is not code!
{data_input} %>%
mutate({variable_to_fix} = case_when({Variable_fixing}
data_diet %>%
mutate(Gender = case_when(Gender == "M" ~ "Male"))
data_diet %>%
mutate(Gender = case_when(Gender == "M" ~ "Male",
TRUE ~ Gender))
data_diet %>%
mutate(Gender = case_when(
Gender %in% c("M", "male", "Man", "m", "Male") ~ "Male",
Gender %in% c("F", "Female", "f", "female")~ "Female",
Gender %in% c("O", "Other") ~ "Other"))
data_diet <-data_diet %>%
mutate(Effect = case_when(Weight_change > 0 ~ "Increase",
Weight_change == 0 ~ "Same",
Weight_change < 0 ~ "Decrease"))
head(data_diet)
data_diet %>%
count(Diet, Effect)
diet_effect <-data_diet %>%
count(Diet, Effect)
data_diet %>%
count(Diet, Effect)%>%
ggplot(aes(x = Effect,y = n, fill = Diet)) +
geom_col(position = position_dodge()) +
labs(y = "Individuals",
title = "Effect of diet A & B on participants")
x<-c("cat", "dog", "mouse")
str_detect(string = x, pattern = "d")
x<-c("cat", "dog", "mouse")
str_replace(string = x, pattern = "d", replacement = "D")
x<-c("cat", "dog", "mouse")
str_sub(string = x, start = 1, end = 2)
head(data_diet,n = 4)
data_diet %>%
filter(str_detect(string = Gender,
pattern = "M"))
count(data_diet, Gender)
data_diet %>%
mutate(Gender = case_when(
Gender %in% c("M", "male", "Man", "m", "Male") ~ "Male",
Gender %in% c("F", "Female", "f", "female")~ "Female",
Gender %in% c("O", "Other") ~ "Other"))
data_diet %>%
mutate(Gender = case_when(
str_detect(string = Gender, pattern = "^m|^M") ~ "Male",
str_detect(string = Gender, pattern = "^f|^F") ~ "Female",
str_detect(string = Gender, pattern = "^o|^O") ~ "Other")) %>%
count(Gender)
knitr::include_graphics("https://media1.giphy.com/media/S9ZK4mmi3u3jdc5dek/200w.webp?cid=ecf05e47h7myga959jwvek6s9x1tkog135g7pxu8vvjz2yqb&rid=200w.webp&ct=g")
diet_comb<-diet_effect %>% unite("change" , Diet:Effect, remove = TRUE)
diet_comb
diet_comb %>%
separate(col = change, into = c("Diet", "Change"), sep = "_" )
df = tibble(id = rep(1:5, 3), visit = rep(1:3, each = 5))
head(df, 4)
df_united <- df %>% unite(col = "unique_id", id, visit, sep = "_")
head(df_united, 4)
str_split("I.like.strings", ".")
str_split("I.like.strings", fixed("."))
str_split("I.like.strings", "\\.")
x <- c("I really", "like writing", "R code programs")
y <- stringr::str_split(x, pattern =  " ") # returns a list
y
Sal = jhur::read_salaries() # or
ss = str_extract(Sal$Name, "Rawling")
head(ss)
ss[ !is.na(ss)]
head(str_extract(Sal$AgencyID, "\\d"))
head(str_extract_all(Sal$AgencyID, "\\d"), 2)
head(grep("^Payne.*", x = Sal$name, value = TRUE), 3)
head(grep("Leonard.?S", x = Sal$name, value = TRUE))
head(grep("Spence.*C.*", x = Sal$name, value = TRUE))
head(str_subset( Sal$name, "^Payne.*"), 3)
head(str_subset( Sal$name, "Leonard.?S"))
head(str_subset( Sal$name, "Spence.*C.*"))
head(Sal$AnnualSalary, 4)
head(as.numeric(Sal$AnnualSalary), 4)
Sal$AnnualSalary <- as.numeric(gsub(pattern = "$", replacement="",
Sal$AnnualSalary, fixed=TRUE))
Sal <- Sal[order(Sal$AnnualSalary, decreasing=TRUE), ]
Sal[1:5, c("name", "AnnualSalary", "JobTitle")]
test<-c(0,NA, -1)
test/0
test <-test/0
is.na(test)
is.nan(test)
is.infinite(test)
A = c(1, 2, 4, NA)
B = c(1, 2, 3, 4)
any(is.na(A)) # are there any NAs - YES/TRUE
any(is.na(B)) # are there any NAs- NO/FALSE
bike <-jhur::read_bike()
bike %>% count(subType)
covid19 <- read.csv("data/owid-covid-data.csv")
head(covid19)
covid19 <- read.csv("data/owid-covid-data.csv")
covid19 %>% count(total_cases)
covid19 <- read.csv("data/owid-covid-data.csv")
covid19 %>% count(location)
blood_data <- read.csv("data/BloodPressure.csv")
head(blood_data)
gapminder <- gapminder::gapminder
gapminder %>% count(continent)
#install.packages("naniar")
library(naniar)
naniar::pct_complete(gapminder)
test
naniar::pct_complete(test) # doesn't count infinite values as missing
library(starwarsdb)
naniar::pct_complete(starwarsdb)
# data
read.csv("data/owid-monkeypox-data.csv")
# data
monkeypox <- read.csv("data/owid-monkeypox-data.csv")
naniar::pct_complete(starwarsdb)
naniar::pct_complete(monkeypox)
mental_health <- read.csv("data/mental_health_survey.csv")
naniar::pct_complete(mental_health) # doesn't count infinite values as missing
?airquality # use this to find out more about the data
airqual <-tibble(airquality)
airqual
pct_complete(airquality)
naniar::gg_miss_var(airqual)
sum(c(1,2,3,NA))
mean(c(2,4,NA))
median(c(1,2,3,NA))
red_blue <- tibble(color = rep(c("red", "blue", NA), 3))
red_blue <- red_blue %>% count(color)
red_blue <- rename(red_blue, col_count = n)
x = c(TRUE, TRUE, TRUE, TRUE, FALSE, NA)
sum(x)
sum(x, na.rm = TRUE)
airqual
## filter() and missing data
```{r, echo = FALSE}
airqual %>%
filter(Ozone > 30)
airqual %>%
filter(Ozone < 30)
airqual %>%
filter(Ozone < 30 | is.na(Ozone))
airqual %>%
drop_na(Ozone)
airqual %>%
drop_na()
```{r}
Use the `miss_var_which()` function from `naniar`
df<-df %>% mutate(test =c(1,2,3,4,5,6))
miss_var_which(airqual) # which columns have missing values
```{r}
airqual %>%
select(!miss_var_which(airqual))
is.na(airqual)
sum(is.na(airqual))
is.na(airqual) %>%
head()
colMeans(is.na(airqual))#TRUE and FALSE treated like 0 and 1
airqual %>%
select(which(colMeans(is.na(df)) < 0.2))# remove if over 20% missing
airqual %>%
head(n = 3)
airqual %>%
mutate(Ozone = na_if(Ozone, 0))
data_diet <- tibble(Diet = rep(c("A", "B", "B"),
times = 4),
Gender = c("Male",
"m",
"Other",
"F",
"Female",
"M",
"f",
"O",
"Man",
"f",
"F",
"O"),
Weight_start = sample(100:250, size = 12),
Weight_change = sample(-10:20, size = 12))
data_diet <- tibble(Diet = rep(c("A", "B", "B"),
times = 4),
Gender = c("Male",
"m",
"Other",
"F",
"Female",
"M",
"f",
"O",
"Man",
"f",
"F",
"O"),
Weight_start = sample(100:250, size = 12),
Weight_change = sample(-10:20, size = 12))
data_diet
data_diet
data_diet %>%
count(Gender)
mental_health <- read.csv("data/mental_health_survey.csv")
mental_health %>%
head()
mental_health %>%
count(Gender)
data_diet
data_diet %>%
count(Gender)
data_diet %>%
mutate(Gender = recode(Gender, M = "Male",
m = "Male",
Man = "Male",
O = "Other",
f = "Female",
F = "Female")) %>%
count(Gender, Diet)
data_diet
data_diet %>%
mutate(Gender = recode(Gender, M = "Male",
m = "Male",
Man = "Male",
O = "Other",
f = "Female",
F = "Female")) %>%
count(Gender, Diet)
data_diet %>%
mutate(Gender = recode(Gender, M = "Male",
m = "Male",
Man = "Male",
O = "Other",
f = "Female",
F = "Female")) %>%
count(Gender, Diet)
data_diet %>%
mutate(Gender = case_when(Gender == "M" ~ "Male"))
data_diet %>%
mutate(Gender = case_when(Gender == "M" ~ "Male",
TRUE ~ Gender))
data_diet %>%
mutate(Gender = case_when(
Gender %in% c("M", "male", "Man", "m", "Male") ~ "Male",
Gender %in% c("F", "Female", "f", "female")~ "Female",
Gender %in% c("O", "Other") ~ "Other"))
data_diet <-data_diet %>%
mutate(Effect = case_when(Weight_change > 0 ~ "Increase",
Weight_change == 0 ~ "Same",
Weight_change < 0 ~ "Decrease"))
head(data_diet)
data_diet
data_diet <- tibble(Diet = rep(c("A", "B", "B"),
times = 4),
Gender = c("Male",
"m",
"Other",
"F",
"Female",
"M",
"f",
"O",
"Man",
"f",
"F",
"O"),
Weight_start = sample(100:250, size = 12),
Weight_change = sample(-10:20, size = 12))
data_diet
data_diet
write.csv(file = "diet_data", row.names = FALSE)
write.csv(data_diet, file = "diet_data", row.names = FALSE)
write.csv(data_diet, file = "diet_data.csv", row.names = FALSE)
view(data_diet)
write.csv(data_diet, file = "F:/VirtualWeekendWorkshops/VWW01_DataAnalysiswithR/modules/11_Manipulating_Data_in_R/data/diet_data.csv", row.names = FALSE)
data_diet <- read.csv("data/diet_data.csv")
data_diet
data_diet %>%
count(Gender)
data_diet %>%
mutate(Gender = recode(Gender, M = "Male",
m = "Male",
Man = "Male",
O = "Other",
f = "Female",
F = "Female")) %>%
count(Gender, Diet)
data_diet %>%
mutate(Gender = recode(Gender, M = "Male",
m = "Male",
Man = "Male",
O = "Other",
f = "Female",
F = "Female")) %>%
count(Gender, Diet)
data_diet %>%
mutate(Gender = case_when(Gender == "M" ~ "Male"))
data_diet %>%
mutate(Gender = case_when(
Gender %in% c("M", "male", "Man", "m", "Male") ~ "Male",
Gender %in% c("F", "Female", "f", "female")~ "Female",
Gender %in% c("O", "Other") ~ "Other"))
data_diet <-data_diet %>%
mutate(Effect = case_when(Weight_change > 0 ~ "Increase",
Weight_change == 0 ~ "Same",
Weight_change < 0 ~ "Decrease"))
head(data_diet)
data_diet %>%
count(Diet, Effect)
diet_effect <-data_diet %>%
count(Diet, Effect)
data_diet %>%
count(Diet, Effect)%>%
ggplot(aes(x = Effect,y = n, fill = Diet)) +
geom_col(position = position_dodge()) +
labs(y = "Individuals",
title = "Effect of diet A & B on participants")
x <- c("M", "male", "Man", "m", "Male", "F", "Female", "f", "female")
str_detect(string = x, pattern = "d")
x <- c("M", "male", "Man", "m", "Male", "F", "Female", "f", "female")
str_detect(string = x, pattern = "m")
x <- c("M", "male", "Man", "m", "Male", "F", "Female", "f", "female")
str_replace(string = x, pattern = "F", replacement = "f")
x <- c("M", "male", "Man", "m", "Male", "F", "Female", "f", "female")
str_sub(string = x, start = 1, end = 2)
head(data_diet,n = 4)
data_diet %>%
filter(str_detect(string = Gender,
pattern = "M"))
count(data_diet, Gender)
data_diet %>%
mutate(Gender = case_when(
Gender %in% c("M", "male", "Man", "m", "Male") ~ "Male",
Gender %in% c("F", "Female", "f", "female")~ "Female",
Gender %in% c("O", "Other") ~ "Other"))
data_diet %>%
mutate(Gender = case_when(
str_detect(string = Gender, pattern = "^m|^M") ~ "Male",
str_detect(string = Gender, pattern = "^f|^F") ~ "Female",
str_detect(string = Gender, pattern = "^o|^O") ~ "Other")) %>%
count(Gender)
diet_comb<-diet_effect %>% unite("change" , Diet:Effect, remove = TRUE)
diet_comb
diet_comb %>%
separate(col = change, into = c("Diet", "Change"), sep = "_" )
df = tibble(id = rep(1:5, 3), visit = rep(1:3, each = 5))
head(df, 4)
df_united <- df %>% unite(col = "unique_id", id, visit, sep = "_")
head(df_united, 4)
colMeans(is.na(airqual)) #TRUE and FALSE treated like 0 and 1
airqual %>%
select(which(colMeans(is.na(df)) < 0.1))# remove if over 20% missing
