# Subsetting R Objects 

## Subsetting a Vector
* Subsetting a vector allows you to extract specific elements based on their index or logical conditions. 
* It is done using square brackets `[ ]` in R.
* Subsetting Vector Elements by Index - Subsetting elements by index retrieves specific elements from a vector.
* Subsetting Vector Elements by Logical Condition - Subsetting elements by logical condition retrieves elements based on a specified condition.

## Subsetting Vector Elements by Index

```{r, subset-vector-1}
vector <- c(10, 20, 30, 40, 50)
vector[3]
```

* The vector contains elements: 10, 20, 30, 40, 50.
* `vector[3]` retrieves the third element, which is `30`.
* `Result`: The third element (30) is displayed.

## Subsetting Vector Elements by Logical Condition

```{r,subset-vector-2}
vector <- c(10, 20, 30, 40, 50)
vector[vector > 30]
```

* The vector contains elements: 10, 20, 30, 40, 50.
* `vector > 30` evaluates to a logical vector: FALSE, FALSE, FALSE, TRUE, TRUE.
* `vector[vector > 30]` retrieves elements where the condition is TRUE.
* `Result`: Elements greater than 30 (40, 50) are displayed.

## Subsetting Vector Elements Using `:` Operator
The `:` operator allows you to specify a range of elements to subset from a vector.

```{r, subset-vector-3}
vector <- c(10, 20, 30, 40, 50)
vector[2:4]
```

* The vector contains elements: 10, 20, 30, 40, 50.
* `2:4` creates a sequence of indices from 2 to 4.
* `vector[2:4]` retrieves elements at indices 2, 3, and 4.
* `Result`: Elements 20, 30, and 40 are displayed.

## Subsetting Vector Elements Using `c()` Function
The `c()` function allows you to create a vector of specific indices to subset from a vector.

```{r, subset-vector-4}
vector <- c(10, 20, 30, 40, 50)
vector[c(1, 3, 5)]
```

* The vector contains elements: 10, 20, 30, 40, 50.
* `c(1, 3, 5)` creates a vector of indices: 1, 3, 5.
* `vector[c(1, 3, 5)]` retrieves elements at indices 1, 3, and 5.
* `Result`: Elements 10, 30, and 50 are displayed.

## Subsetting List
* Subsetting a list allows you to extract specific elements or subsets from a list in R.
* It is done using double square brackets `[[ ]]` or single square brackets` [ ]` in R.
* Subsetting List Elements by Index - Subsetting elements by index retrieves specific elements from a list.
* Subsetting List Elements by Name - Subsetting elements by name allows you to retrieve elements based on their assigned names.
* Subsetting a Subset of List Elements - You can subset a subset of elements from a list using single square brackets `[ ]`.


## Subsetting List Elements by Index

```{r, subset-list-1}
my_list <- list("apple", "banana", "orange")
my_list[[2]]
```

* The list contains elements: "apple", "banana", "orange".
* `my_list[[2]]` retrieves the second element of the list, which is "banana".
* `Result`: The second element ("banana") is displayed.


##  Subsetting List Elements by Name

```{r, subset-list-2}
my_list <- list(fruit1 = "apple", fruit2 = "banana", fruit3 = "orange")
my_list$fruit3
```
* The list contains named elements: fruit1, fruit2, fruit3.
* `my_list$fruit3` retrieves the element with the name "fruit3", which is "orange".
* `Result`: The element "orange" is displayed.

## Subsetting a Subset of List Elements

```{r, subset-list-3}
my_list <- list("apple", "banana", "orange")
my_list[2:3]
```

* The list contains elements: "apple", "banana", "orange".
* `my_list[2:3]` retrieves the second and third elements of the list.
* `Result`: The second and third elements ("banana", "orange") are displayed.


## Subsetting Matrix
* Subsetting a matrix allows you to extract specific rows, columns, or elements from a matrix in R.
* It is done using square brackets `[ ]` in combination with row and column indices.
* Subsetting Rows - Subsetting rows allows you to retrieve specific rows from a matrix.
* Subsetting Columns - Subsetting columns allows you to retrieve specific columns from a matrix.
* Subsetting Elements - Subsetting individual elements allows you to retrieve specific elements from a matrix.


## Subsetting Rows

```{r, subset-mat-1}
matrix <- matrix(1:6, nrow = 2)
matrix[1, ]
```

* The matrix contains elements: 1, 2, 3, 4, 5, 6.
* `matrix[1, ]` retrieves the first row of the matrix.
* `Result`: The first row (1, 2) is displayed.

## Subsetting Columns

```{r, subset-mat-2}
matrix <- matrix(1:6, nrow = 2)
matrix[, 2]
```

* The matrix contains elements: 1, 2, 3, 4, 5, 6.
* `matrix[, 2]` retrieves the second column of the matrix.
* `Result`: The second column (2, 4) is displayed.

## Subsetting Elements

```{r, subset-mat-3}
matrix <- matrix(1:6, nrow = 2)
matrix[2, 1]
```

* The matrix contains elements: 1, 2, 3, 4, 5, 6.
* `matrix[2, 1]`retrieves the element at the second row and first column.
* `Result`: The element at the second row and first column (3) is displayed.