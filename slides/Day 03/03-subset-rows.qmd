# Subset Observations (Rows) 

## Subset Rows 
- The `filter()` verb from the dplyr package is used to subset or filter rows of a dataframe based on specific conditions. 
- It allows you to extract a subset of the data that meets certain criteria. 
- Syntax: `filter(data, condition)`
- Arguments:
  - `data`: The dataframe or tibble from which you want to filter rows.
  - `condition`: The logical condition used to filter the rows. It can be a single condition or a combination of conditions.
- Condition:
  - The condition can be created using comparison operators `(<, >, ==, !=, <=, >=)` and logical operators `(& for "and", | for "or", ! for "not")`.
  - You can also use functions such as `is.na()` or `%in% `within the condition.

## Row Subsetting Techniques

```{r, eval=FALSE}
# Filter rows based on a single condition
filtered_data <- filter(data, variable > 10)

# Filter rows based on multiple conditions
filtered_data <- filter(data, variable1 > 10 & variable2 == "A")

# Filter rows based on a condition using the %in% operator
filtered_data <- filter(data, variable %in% c("A", "B"))

# Filter rows where variable is between 10 and 20
filtered_data <- filter(data, between(variable, 10, 20))
```


